services:
  bitcoind:
    container_name: bitcoind-node
    # hostname: bitcoind-node
    image: kylemanna/bitcoind@sha256:2400e64960457b22be55299a2d7fa2aaa217f3dfc4afb84387e5511fe8ce5055
    # restart: unless-stopped
    volumes:
      - ${BITCOIND_DATA:-./bitcoind-data}:/bitcoin/.bitcoin
    ports:
      # regtest ports
      - 127.0.0.1:28331:28331 # zmq sequence
      - 127.0.0.1:28332:28332 # zmq raw blocks
      - 127.0.0.1:28333:28333 # zmq raw tx
      - 127.0.0.1:28334:28334 # zmq hash blocks
      - 127.0.0.1:28335:28335 # zmq hash tx
      - 127.0.0.1:18443:18443 # json-rpc
      - 127.0.0.1:18444:18444
      - 127.0.0.1:18445:18445
    # Create prod level credentials if exposing node externally
    command: -printtoconsole
      -zmqpubsequence=tcp://0.0.0.0:28331
      -zmqpubrawblock=tcp://0.0.0.0:28332
      -zmqpubrawtx=tcp://0.0.0.0:28333
      -zmqpubhashblock=tcp://0.0.0.0:28334
      -zmqpubhashtx=tcp://0.0.0.0:28335
      -rpcuser=user
      -rpcpassword=password
      -regtest
      -rest
      -rpcbind=0.0.0.0:18443
      -rpcallowip=0.0.0.0/0

  # we use bitcoind rather than btcd, because btcd lacks the proof generation endpoints
  btcd:
    profiles:
      - donotstart
    container_name: btcd
    hostname: btcd
    build: https://github.com/btcsuite/btcd.git#master
    volumes:
      - btcd-data:/root/.btcd
    ports:
      - 18333:18333
      - 18334:18334
    # https://github.com/btcsuite/btcd/blob/master/docs/configuration.md
    # Create prod level credentials if exposing node externally
    command: ["--simnet", "--rpcuser=user", "--rpcpass=password"]

  sui-node:
    container_name: sui-node
    image: mysten/sui-tools:testnet-v1.46.0-arm64
    volumes:
      - ./sui_config:/root/.sui/sui_config
    ports:
      - 9000:9000
      - 9123:9123
    command: >
      /bin/bash -c "RUST_LOG='off,sui_node=info' sui start --with-faucet --force-regenesis"

volumes:
  btcd-data:
